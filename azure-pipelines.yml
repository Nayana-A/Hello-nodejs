trigger: 
- main

variables:
  dockerRegistryServiceConnection: '467aebc6-c2d7-48d1-af79-d79a67c80398'
  imageRepository: 'aks-test-app'
  containerRegistry: 'myzomato'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'

  azureSubscription: 'default'
  azureResourceGroup: 'Nayana'
  kubernetesCluster: 'mangedevopsagent'
  namespace: 'prod'

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      name: magedpool
    steps:
    - task: Docker@2
      displayName: Build and Push Docker image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy Job
    environment: 'aks-test'
    pool:
      name: magedpool
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            displayName: Apply Deployment YAML
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: $(azureSubscription)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesCluster)
              namespace: $(namespace)
              command: 'apply'
              useConfigurationFile: true
              configuration: 'manifests/deployment.yaml'

          - task: Kubernetes@1
            displayName: Update Image Tag
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: $(azureSubscription)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesCluster)
              namespace: $(namespace)
              command: 'set'
              arguments: "image deployment/aks-test-deploy aks-test-container=$(containerRegistry)/$(imageRepository):$(tag)"
